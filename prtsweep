#!/bin/bash
#
# $Id: prtsweep,v 1.2 2003/12/17 21:17:02 opel Exp $
# (c) 2002, 2003 by Martin Opel <martin@obbl-net.de>
#
# May be redistributed and modified under the terms of the GPL
# only usable with CRUX Linux, version 1.0 or higher
#
# USE AT YOUR OWN RISK
#
# This script scans your supfiles in /etc/ports to find out your port
# directories and then scans all ports for old files, which are not part
# of the source-array in the Pkgfile and are not pkgfiles (name#version...).
# All these old files are removed. For details see "man 1 prtsweep".
#

info() {
    echo -e "=======> $@"
}

msg() {
    echo -e "+ $@"
}

error() {
    info "ERROR: $@"
}

interrupted() {
    info "exiting..."
    exit 1
}

getportdirs() {
    local f
    for f in /etc/ports/*.rsync /etc/ports/*.httpup; do
        awk -F= '$1=="destination" || $1=="ROOT_DIR" {print $2}' $f
    done
}

keepfiles() {
    local f
    for f in "${KEEP_FILES[@]}"; do
        if [ "$1" = "$f" ]; then
            return 0
        fi
    done
    return 1
}

remove() {
    item=$1
    if [ -f $item ]; then
        if [ "$dryrun" = "1" ]; then
            msg "removing file $item (dryrun)"
        else
            msg "removing file $item"	    
            rm $item
        fi
    elif [ -d $item ]; then
        if [ "$dryrun" = "1" ]; then
            msg "removing directory $item (dryrun)"
        else
            msg "removing directory $item"
            rm -r $item
        fi
    fi
}

removeemptydir() {
    if [ `find $1 | wc -l` -eq 1 ]; then
        remove $1
    else
        info "cannot remove non-empty directory '$dir'"
    fi
}

inlist() {
    item=$1
    shift
    list="$@"

    for i in $list; do
        if [ "$i" = "$item" ]; then
            return 0
        fi
    done
   
    return 1
}

sweep() {
    dir=$1
    savedir=`pwd`
    printedpwd="false"

    if [ ! -d $dir ]; then
        error "'`pwd`/$dir' is not a directory!"
        usage
    fi

    if [ ! -f $dir/Pkgfile ]; then
        info `pwd`/$dir
        msg "no Pkgfile found, empty port '$dir'."
        if [ "$delete" = "1" ]; then
            removeemptydir $dir
        else
            msg "use '-d' to remove empty directories."
        fi
        return
    fi
    
    cd $dir
    unset name version source pkgfiles
    . Pkgfile
    
    for f in ${source[@]}; do
        pkgfiles=( `basename $f` ${pkgfiles[@]} )
    done
    for f in `ls -a`; do
        if ! keepfiles "$f"; then
            if ! echo $f | grep '.*#.*\.pkg\.tar\.[gbx]z*' >/dev/null; then
                if ! inlist $f ${pkgfiles[@]}; then
                    if [ "$printedpwd" = "false" ]; then
                        printedpwd="true"
                        info `pwd`
                    fi
                remove $f
                fi
            fi
        fi
    done
    cd $savedir
}

getoptions() {
    while [ "$1" = "-a" -o "$1" = "-d" -o "$1" = "-n" ]; do
        if [ "$1" = "-n" ]; then
            dryrun=1
            shift
        fi
        if [ "$1" = "-d" ]; then
            delete=1
            shift
        fi
        if [ "$1" = "-a" ]; then
            auto=1
            shift
        fi
    done
    ports="$@"
}

usage() {
    echo 
    echo "Usage: prtsweep [-a] [-d] [-n] [PORTDIR ...]"
    echo
    exit 1
}

trap "interrupted" SIGHUP SIGINT SIGQUIT SIGTERM

getoptions $@

KEEP_FILES=(
    "Pkgfile" "README" "pre-install" "post-install"
    ".footprint" ".signature" ".32bit" ".nostrip"
    "." ".."
)  


if [ -z "$ports" -a "$auto" = "1" ]; then
    for portdir in `getportdirs`; do
        savedir=`pwd`
        cd $portdir
        for dir in *; do
            test -d $dir && sweep $dir
        done
        cd $savedir
    done
    exit 0
elif [ ! -z "$ports" ]; then
    for dir in $ports; do
        sweep $dir
    done
    exit 0
fi

usage
exit 1
